{"version":3,"sources":["Note.js","Board.js","serviceWorker.js","index.js"],"names":["Note","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","editing","edit","bind","assertThisInitialized","remove","renderForm","renderDisplay","save","randomBetween","style","right","window","innerWidth","top","innerHeight","transform","concat","x","y","s","Math","ceil","random","textArea","_newText","focus","select","nextProps","nextState","children","setState","onRemove","index","e","preventDefault","onChange","value","_this2","react_default","a","createElement","Fragment","className","onSubmit","ref","input","defaultValue","id","floppy_o_default","onClick","pencil_default","trash_default","Component","Board","notes","eachNote","update","add","nextId","self","count","fetch","then","response","json","split","forEach","sentence","substring","text","prevState","toConsumableArray","note","uniqueId","newText","i","console","log","map","objectSpread","filter","src_Note","key","plus_default","Boolean","location","hostname","match","ReactDOM","render","src_Board","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.2a2b822e.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport FaPencil from 'react-icons/lib/fa/pencil'\r\nimport FaTrash from 'react-icons/lib/fa/trash'\r\nimport FaFloppyO from 'react-icons/lib/fa/floppy-o'\r\n\r\nclass Note extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            editing: false\r\n        }\r\n        this.edit = this.edit.bind(this)\r\n        this.remove = this.remove.bind(this)\r\n        this.renderForm = this.renderForm.bind(this)\r\n        this.renderDisplay = this.renderDisplay.bind(this)\r\n        this.save = this.save.bind(this)\r\n        this.randomBetween = this.randomBetween.bind(this)\r\n    }\r\n\r\n    componentWillMount() {\r\n        this.style = {\r\n            right: this.randomBetween(0, window.innerWidth - 150, 'px'),\r\n            top: this.randomBetween(0, window.innerHeight - 150, 'px'),\r\n            transform: `rotate(${this.randomBetween(-25, 25, 'deg')})`\r\n        }\r\n    }\r\n\r\n    randomBetween(x, y, s) {\r\n        return x + Math.ceil(Math.random() * (y - x)) + s\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        var textArea\r\n        if (this.state.editing) {\r\n            textArea = this._newText\r\n            textArea.focus()\r\n            textArea.select()\r\n        }\r\n    }\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        return (\r\n            this.props.children !== nextProps.children || this.state !== nextState\r\n        )\r\n    }\r\n\r\n    edit() {\r\n        this.setState({\r\n            editing: true\r\n        })\r\n    }\r\n    remove() {\r\n        this.props.onRemove(this.props.index)\r\n    }\r\n    save(e) {\r\n        e.preventDefault()\r\n        this.props.onChange(this._newText.value, this.props.index)\r\n        this.setState({\r\n            editing: false\r\n        })\r\n    }\r\n\r\n    renderForm() {\r\n        return (\r\n            <>\r\n                <div className=\"note\" style={this.style}>\r\n                    <form onSubmit={this.save}>\r\n                        <textarea ref={input => this._newText = input}\r\n                            defaultValue={this.props.children}\r\n                        />\r\n                        <button id=\"save\"><FaFloppyO /></button>\r\n                    </form>\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n\r\n\r\n    renderDisplay() {\r\n        return (\r\n            <React.Fragment>\r\n                <div className=\"note\" style={this.style}>\r\n                    <p>{this.props.children}</p>\r\n                    <span>\r\n                        <button onClick={this.edit} id=\"edit\" ><FaPencil />></button>\r\n                        <button onClick={this.remove} id=\"remove\"><FaTrash /></button>\r\n                    </span>\r\n                </div>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n    render() {\r\n        return this.state.editing ? this.renderForm() : this.renderDisplay()\r\n\r\n        // if (this.state.editing) {\r\n        //     return this.renderForm();\r\n        // } else {\r\n        //     return this.renderDisplay();\r\n        // }\r\n    }\r\n}\r\n\r\nexport default Note;\r\n","import React, { Component } from 'react'\r\nimport Note from './Note'\r\nimport FaPlus from 'react-icons/lib/fa/plus'\r\n\r\nclass Board extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            notes: []\r\n        }\r\n        this.eachNote = this.eachNote.bind(this)\r\n        this.update = this.update.bind(this)\r\n        this.remove = this.remove.bind(this)\r\n        this.add = this.add.bind(this)\r\n        this.nextId = this.nextId.bind(this)\r\n    }\r\n\r\n    componentWillMount() {\r\n        var self = this\r\n        if (this.props.count) {\r\n            fetch(`https://baconipsum.com/api/?type=all-meat&sentences=${this.props.count}`)\r\n                .then(response => response.json())\r\n                .then(json => json[0]\r\n                    .split(\". \")\r\n                    .forEach(sentence => self.add(sentence.substring(0, 25))))\r\n        }\r\n    }\r\n\r\n    add(text) {\r\n        this.setState(prevState => ({\r\n            notes: [\r\n                ...prevState.notes,\r\n                {\r\n                    id: this.nextId(),\r\n                    note: text\r\n                }\r\n            ]\r\n        }))\r\n    }\r\n\r\n    nextId() {\r\n        this.uniqueId = this.uniqueId || 0\r\n        return this.uniqueId++\r\n    }\r\n\r\n    update(newText, i) {\r\n        console.log('updating item at index', i, newText)\r\n        this.setState(prevState => ({\r\n            notes: prevState.notes.map(\r\n                note => (note.id !== i) ? note : { ...note, note: newText }\r\n            )\r\n        }))\r\n    }\r\n    remove(id) {\r\n        console.log('removing item at', id)\r\n        this.setState(prevState => ({\r\n            notes: prevState.notes.filter(note => note.id !== id)\r\n        }))\r\n    }\r\n\r\n    eachNote(note, i) {\r\n        return (\r\n            <>\r\n                <Note\r\n                    onChange={this.update}\r\n                    onRemove={this.remove}\r\n                    key={note.id}\r\n                    index={note.id}>\r\n                    {note.note}\r\n                </Note>\r\n            </>\r\n\r\n        )\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <div className=\"board\">\r\n                    {this.state.notes.map(this.eachNote)}\r\n                    <button onClick={this.add.bind(null, \"New Note\")}\r\n                        id=\"add\"><FaPlus /></button>\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\nexport default Board\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './index.css'\r\nimport Board from './Board'\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<Board count={50} />, document.getElementById('root'))\r\nserviceWorker.unregister()\r\n"],"sourceRoot":""}